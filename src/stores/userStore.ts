import { defineStore } from "pinia";
import userService from "../services/userService";

import { UpdateUser, User } from "../types/user";

import { ref } from "vue";

export const useUserStore = defineStore("user", () => {
  const userservice = userService;
  const currentUser = ref<User>();
  const isLoign = ref(false);

  async function checkLoignAndSaveDataUser(username: string, password: string) {
    try {
      // üöÄ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô service `checkAndLoginUser` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      const response = await userservice.checkAndLoginUser(username, password);

      // ‚úÖ ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà response.data ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà 0 (‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö)
      if (response.data != 0) {
        // üîπ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏•‡∏á LocalStorage ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
        localStorage.setItem("userLogin", JSON.stringify(response.data));
        // üîπ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ `isLoign` ‡πÄ‡∏õ‡πá‡∏ô `true` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
        isLoign.value = true;
      }

      // ‚úÖ ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà response.data ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö 0 (‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö)
      if (response.data == 0) {
        // üîπ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API `getDataUserformAPI` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏∑‡πà‡∏ô
        const res = await userservice.getDataUserformAPI(username, password);

        // üîπ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏à‡∏≤‡∏Å Username
        const findUserByUsername = await userservice.getUserByUsername(
          username
        );

        // üîπ ‡∏î‡∏∂‡∏á `userId` ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏î‡πâ
        const userId: User = findUserByUsername.data;

        // üîπ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• `data` ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å API ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏≥‡∏°‡∏≤‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
        const updateUser: UpdateUser = res.data.data;

        // üîπ ‡∏™‡∏£‡πâ‡∏≤‡∏á timestamp ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤ `lastLoginAt`
        const updateLastLogin = new Date().toISOString().split("T")[0];
        updateUser.lastLoginAt = updateLastLogin;

        // üîπ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤ `lastLoginAt` ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        const updateLogin = await userservice.updateLastLoginUser(
          userId.userId,
          updateUser
        );

        // üîπ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡∏á LocalStorage
        localStorage.setItem("userLogin", JSON.stringify(updateLogin.data));

        // üîπ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ `isLoign` ‡πÄ‡∏õ‡πá‡∏ô `true` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
        isLoign.value = true;
      }

      // ‚ùå ‡∏î‡∏±‡∏Å‡∏à‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏à‡∏≤‡∏Å try
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
    } catch (error: any) {
      if (error.response) {
        const status = error.response.status;
        // üö® ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô Error 500 ‡πÉ‡∏´‡πâ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
        if (status === 500) {
          console.error("üî• Internal Server Error. Please try again later.");
          return null;
        }

        // üö® ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Error ‡∏≠‡∏∑‡πà‡∏ô‡πÜ
        console.error(`‚ùå API Error (${status}):`, error.response.data);
        return null;
      } else {
        console.error("‚ùå Unknown error occurred:", error);
        return null;
      }
    }
  }

  function getLocalStorageUser() {
    const userLogin = localStorage.getItem("userLogin");
    if (userLogin) {
      currentUser.value = JSON.parse(userLogin);
    }
    return currentUser.value;
  }


  
  return {
    checkLoignAndSaveDataUser,
    currentUser,
    getLocalStorageUser,
    isLoign,
  };
});
